apply plugin: 'com.android.library'
//apply plugin: 'com.neenbedankt.android-apt'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")
//    publishNonDefault true

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionLibCode")
        versionName globalConfiguration.getAt("androidVersionLibName")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    def androidDependencies = rootProject.ext.androidDependencies
    compile androidDependencies.design
    compile androidDependencies.support_v4
    compile androidDependencies.cardview_v7
    compile androidDependencies.appcompat_v7
    compile androidDependencies.recyclerView_v7
    def httpDependencies = rootProject.ext.httpDependencies
    compile httpDependencies.okhttp3
    compile httpDependencies.retrofit2
    compile httpDependencies.retrofit2_gson
    compile httpDependencies.retrofit2_scalars
    compile httpDependencies.retrofit2_rxjava
    compile httpDependencies.rxandroid
    def toolDependencies = rootProject.ext.toolDependencies
    compile toolDependencies.eventbus
    compile toolDependencies.butterKnife
    compile toolDependencies.glide
    compile(toolDependencies.glide_recyclerview) {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }
    annotationProcessor toolDependencies.glide_compiler
}
