apply plugin: 'com.android.library'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")
//    publishNonDefault true

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    def androidDependencies = rootProject.ext.androidDependencies
    api androidDependencies.design
    api androidDependencies.support_v4
    api androidDependencies.cardview_v7
    api androidDependencies.appcompat_v7
    api androidDependencies.recyclerView_v7

    def httpDependencies = rootProject.ext.httpDependencies
    api httpDependencies.okhttp3
    api httpDependencies.okhttp3_logging
    api httpDependencies.retrofit2
    api httpDependencies.retrofit2_gson
    api httpDependencies.retrofit2_adapter
    api httpDependencies.rxjava
    api httpDependencies.rxandroid
    api httpDependencies.rxbinding
    api httpDependencies.rxlifecycle
//    api httpDependencies.rxpermissions
//
//    def httpDependencies = rootProject.ext.httpDependencies
//    api httpDependencies.okhttp3
//    api httpDependencies.retrofit2
//    api httpDependencies.retrofit2_gson
//    api httpDependencies.retrofit2_scalars
//    api httpDependencies.retrofit2_rxjava
//    api httpDependencies.rxandroid
    def toolDependencies = rootProject.ext.toolDependencies
    api toolDependencies.eventbus
    api toolDependencies.butterKnife
    api toolDependencies.glide
    api(toolDependencies.glide_recyclerview) {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }
    annotationProcessor toolDependencies.glide_compiler
}
